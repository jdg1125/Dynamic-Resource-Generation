@page
@model IndexModel
@{
    ViewData["Title"] = "Attack Monitoring Console";
}

<nav>
    <ul class="toolbar container" id="buttons">
        <li><span id="setup">Set Up WorkSpaces</span></li>
        <li><span id="deploy">Deploy WorkSpaces</span></li>
        <li><span id="saveLog">Save Log</span></li>
        <li><span id="terminate">Terminate Environment</span></li>
    </ul>
</nav>

<div class="page-wrapper-grid" id="monitorView">
    <div class="container content-top">
        <div class="top-row-1">
            <br />
            <h1>Attack Monitoring Console</h1>
            <br />
            <br />
        </div>
        <div class="top-row-2">
            <div class="content-left">
                <table>
                    <thead>
                        <tr>
                            <th>WorkSpace Owner</th>
                        </tr>
                        <tr>
                            <th>WorkSpace ID</th>
                        </tr>
                        <tr>
                            <th>Attacker IP</th>
                        </tr>
                    </thead>
                    <tbody id="insertAttackInfo">
                    </tbody>
                </table>
            </div>
            <div class="content-right">
                <h3>Threat Level: <span id="threatText"></span></h3>
                <div class="progress custom-progress" id="progressWrapper">
                    <div class="progress-bar custom-progress" id="threatIndicator">
                    </div>
                </div>
            </div>
        </div>
    </div>



    <div class="container" id="bottomContent">

        <div class="monitorSpace">
            <table id="displayArea">
                <thead>
                    <tr>
                        <th>Keystrokes</th>
                        <th>Date & Time</th>
                        @*<th>WorkSpace Owner</th>
                            <th>WorkSpace ID</th>
                            <th>Attacker IP</th>*@
                    </tr>
                </thead>
                <tbody id="insertKeylogs">
                </tbody>
            </table>
        </div>
        <div class="hidden-view" id="deployResourceMenu">
            <h4>Deploy Resources</h4>
            <br />
            <table>
                <thead>
                    <tr>
                        <th>Role</th>
                        <th>Username</th>
                        <th>Status</th>
                        <th>&nbsp;</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach(var ws in Model.result.Workspaces){ 
                    <tr>
                        @{
                            foreach (var bd in Model.result2.Bundles)
                            {
                                if (!Model.bundle_dicts.ContainsKey(bd.BundleId))
                                {
                                    Model.bundle_dicts.Add(bd.BundleId, bd.Name);
                                }
                            }
                        }
                        @if (Model.bundle_dicts.ContainsKey(ws.BundleId))
                        {
                            <td>@Model.bundle_dicts[ws.BundleId]</td>
                        }
                        else
                        {
                            <td></td>
                        }
                        <td>@ws.UserName</td>
                        @{
                            var text_cond = "nothing";
                        }
                        @if (ws.State == "STOPPED")
                        {
                            text_cond = "text-stopped";
                        }
                        else if (ws.State == "PENDING")
                        {
                            text_cond = "text-pending";
                        }
                        else if (ws.State == "AVAILABLE")
                        {
                            text_cond = "text-available";
                        }
                        else if (ws.State == "STARTING")
                        {
                            text_cond = "text-running";
                        }
                        else if (ws.State == "TERMINATING")
                        {
                            text_cond = "text-terminating";
                        }
                        else
                        {
                            text_cond = "text-black";
                        }
                        <td><span class="@text_cond">@ws.State</span></td>

                        @if (ws.State != "STOPPED" || ws.State == "TERMINATING" || ws.State == "TERMINATED" || ws.WorkspaceProperties.RunningMode != "AUTO_STOP")
                        {
                            <td><input  class="starting_ws" type="checkbox" value="@ws.WorkspaceId" onclick="addCostToTotal(event)" disabled /></td>
                        }
                        else
                        {
                            <td><input class="starting_ws" type="checkbox" value="@ws.WorkspaceId" onclick="addCostToTotal(event)" /></td>
                        }

                    </tr>
                   
                    }
                    @*<tr>
                        <td>Admin</td>
                        <td>joseph</td>
                        <td><span class="text-stopped">Stopped</span></td>
                        <td><input type="checkbox" value="joseph" onclick="addCostToTotal(event)" /></td>
                    </tr>
                    <tr>
                        <td>Engineer</td>
                        <td>jake</td>
                        <td><span class="text-stopped">Stopped</span></td>
                        <td><input type="checkbox" value="jake" onclick="addCostToTotal(event)" /></td>
                    </tr>
                    <tr>
                        <td>HR Manager</td>
                        <td>justin</td>
                        <td><span class="text-stopped">Stopped</span></td>
                        <td><input type="checkbox" value="justin" onclick="addCostToTotal(event)" /></td>
                    </tr>*@
                </tbody>
            </table>
            <br />
            <h4>Cost Of Selected: &nbsp;&nbsp;&nbsp;&nbsp;$<span id="deployCost">0.0</span>0 per hour</h4>
            <br />
            <button id="deployBtn" onclick="DeploySelected()">Deploy Selected</button>
        </div>
    </div>
</div>

<div class="container hidden-view" id="setupView">
    <br />
    <h1>Setup WorkSpaces</h1>
    <br />
    <br />
    <form method="post">

        <fieldset class="form-list">
            <legend class="form-text-blue">WorkSpace Image</legend>
            @{
                foreach (var item in Model.result2.Bundles)
                {
                    <div>
                        <input type="radio" name="role" value="@item.Name" />
                        <label for="@item.Name">@item.Name</label>
                    </div>
                }
            }
            @*<div>
            <input type="radio" name="role" value="Engineer" />
            <label for="Engineer">Engineer</label>
        </div>
        <div>
            <input type="radio" name="role" value="HRManager" />
            <label for="HRManager">HRManager</label>
        </div>
        <div>
            <input type="radio" name="role" value="Admin" />
            <label for="Admin">Admin</label>
        </div>*@
        </fieldset>

        <div id="volumeSizeSelector">
            <label for="volumeSize" class="form-text-blue">Choose root volume & user volume size: </label>
            <br />
            <select id="volume_choices" name="volumeSize">
                <option class="volPair" value="volPair1">Root 80GB - User 10GB</option>
                <option class="volPair" value="volPair2">Root 80GB - User 50GB</option>
                <option class="volPair" value="volPair3">Root 80GB - User 100GB</option>
                <option class="volPair" value="volPair4">Root 175GB - User 100GB</option>
            </select>
        </div>
        <br />


        <fieldset class="form-list">
            <legend class="form-text-blue">Running Mode</legend>
            <div>
                <input class="runningMode" type="radio" name="runningMode" value="AlwaysOn" onclick="toggleHoursSelector(event)" />
                <label for="runningMode">AlwaysOn</label>
            </div>
            <div>
                <input class="runningMode" type="radio" name="runningMode" value="AutoStop" onclick="toggleHoursSelector(event)" />
                <label for="runningMode">AutoStop</label>                           @*check the for *@

                <div id="hoursSelector" class="hidden-view">
                    <label for="numHours">Number of hours before AutoStop: </label>
                    <br />
                    <select name="numHours">
                        @for (int i = 1; i <= 48; i++)
                        {
                            <option value="@i">@i</option>
                        }
                    </select>
                </div>
            </div>
        </fieldset>
        <br />


        <div id="userNameSelector">
            <label for="userName" class="form-text-blue">Choose username: </label>
            <br />
            <select name="userName">
                @{
                    foreach (var uName in Model.getMyUsernames.Users)
                    {
                        <option value="@uName.Username">@uName.Username</option>
                    }
                }
                @*<option value="justin">justin</option>
        <option value="eric">eric</option>
        <option value="jake">jake</option>
        <option value="daniel">daniel</option>
        <option value="joseph">joseph</option>*@

            </select>
        </div>

        <br />
        <br />
        <h5>Cost To Set Up This WorkSpace: &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="setupCost"></span></h5>
        <br />
        <br />
        <button type="submit">Generate WorkSpace</button>
    </form>

</div>



<div class="popup" id="popup_terminate">
    <div class="overlay"></div>
    <div class="content">
        <div class="close-btn" onclick="togglePopup()">&times;</div>
        <p>The environment has been terminated.</p>
    </div>
</div>
